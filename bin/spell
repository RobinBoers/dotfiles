#!/bin/sh -eu
# Slightly adapted from the 'spell' script written by Tyler Cipriani.
# https://tylercipriani.com/blog/2017/08/14/offline-spelling-with-aspell/
#
# Changes: 
# - Removed some bashisms
# - Use wl-clipboard instead of xsel.
# - Use err & required for error handling

required aspell

usage() {
  echo "Usage: $(basename $0) <WORD>"
  echo
  exit 0
}

case "${1:-}" in
    ""|-h|--help) usage ;;
esac

IFS=':'

# Parse the apsell format and return a list of ":" separated words
read -a candidates <<< "$(printf "%s\n" "$1" \
    | aspell -a \
    | awk -F':' '/^&/ {
        split($2, a, ",")
        result=""
        for (x in a) {
            gsub(/^[ \t]/, "", a[x])
            result = a[x] ":" result
        }
        gsub(/:$/, "", result)
        print result
    }')"

# Reverse number and print the parsed bash array because the list comes
# out of gawk backwards
for item in "${candidates[@]}"; do
    printf '%s\n' "$item"
done \
    | tac \
    | nl \
    | less -FirSX

printf "Enter the choice (empty to cancel, 0 for input): "
read index

[ -z "$index" ] && exit
[  "$index" == 0 ] && word="$1"

if [ -z "$word" ]; then
    array_pos=$(( ${#candidates[@]} - index ))
    word="${candidates[$array_pos]}"
fi

if [ -n "$word" ]; then
    printf "$word" | wl-copy 
    printf "Copied '%s' to clipboard!\n" "$word"
else
    err "no match found"
fi
