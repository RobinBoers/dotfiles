#! /usr/bin/env perl
use warnings;
use strict;

use Term::ReadKey;

=head1 restore-db 
Wrapper around pg_restore command. Takes databasename and optionally dump file location as arguments.
=cut

{
    # Read arguments
    my ($name, $file_arg) = @ARGV;
    defined $name or die "Usage: restore-db <database name> [<dump file>]\n";
    my $file = $file_arg || "/tmp/$name.dump";

    # Ask confirmation to drop DB, although 
    print "Drop database first? [y/n] :";
    if ( confirm() ) {
        system("dropdb -U postgres -h localhost $name") == 0 or die;
        system("createdb -U postgres -h localhost $name") == 0 or die;
    }

    # Terminate script and run pg_restore command
    exec "pg_restore --dbname postgres://postgres\@localhost/$name --single-transaction --no-owner --no-privileges --exit-on-error --verbose $file";
    die "Error: Couldn't run pg_restore";
}

sub confirm {
    for (1..10) {
        # Read single keypress from STDIN
        ReadMode 'cbreak';
        print my $resp = ReadKey(0);
        ReadMode 'normal';

        # Return if 
        if      ($resp =~ /y/i)     { print "\n"; return 1 }
        elsif   ($resp =~ /n/i)     { print "\n"; return 0 }
    }
    die "\nexpected y or n\n";
}
