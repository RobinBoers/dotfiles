#!/bin/sh
# Wrapper around pg_restore. Takes database and optionally dump file location as arguments.

set -euo pipefail

usage() {
  echo "Usage: $(basename $0) <database name> [dump file]"
  echo
  exit 0
}

case "${1:-}" in
  ""|-h|--help)
    usage
    ;;
esac

name="$1"
file="${2:-/tmp/$name.dump}"

exists() {
  psql -U postgres -h localhost -tAc "SELECT 1 FROM pg_database WHERE datname = '$1'" | grep -q 1
}

if exists "$name"; then
  if prompt -y "Drop database first?"; then
    dropdb -U postgres -h localhost "$name"
    createdb -U postgres -h localhost "$name"
  fi
else
  if prompt -y "Database '$name' does not (yet) exist. Create it?"; then
    createdb -U postgres -h localhost "$name"
  else
    err "cannot continue without database"
  fi
fi

pg_restore \
  --dbname="postgres://postgres@localhost/$name" \
  --single-transaction \
  --no-owner \
  --no-privileges \
  --exit-on-error \
  --verbose \
  "$file"
